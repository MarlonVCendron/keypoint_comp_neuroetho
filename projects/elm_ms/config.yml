

#==================== ANATOMY =====================#

# used to access columns in the keypoint data
bodyparts:
- snout
- skull
- left_ear
- neck
- right_ear
- left_front
- mid_front
- right_front
- left_mid
- mid_mid
- right_mid
- left_back
- mid_back
- right_back
- tail_base
- tail_mid
- tail_tip

# determines the subset of bodyparts to use for modeling and the order in which they are represented
use_bodyparts:
- snout
- skull
- left_ear
- neck
- right_ear
- left_front
- mid_front
- right_front
- left_mid
- mid_mid
- right_mid
- left_back
- mid_back
- right_back
- tail_base

# used for visualization only
skeleton:
- - snout
  - skull
- - snout
  - left_ear
- - snout
  - right_ear
- - skull
  - left_ear
- - skull
  - right_ear
- - left_ear
  - neck
- - right_ear
  - neck
- - neck
  - left_front
- - neck
  - mid_front
- - neck
  - right_front
- - left_front
  - mid_front
- - mid_front
  - right_front
- - left_front
  - left_mid
- - mid_front
  - mid_mid
- - right_front
  - right_mid
- - left_mid
  - mid_mid
- - mid_mid
  - right_mid
- - left_mid
  - left_back
- - mid_mid
  - mid_back
- - right_mid
  - right_back
- - left_back
  - mid_back
- - mid_back
  - right_back
- - left_back
  - tail_base
- - mid_back
  - tail_base
- - right_back
  - tail_base
- - tail_base
  - tail_mid
- - tail_mid
  - tail_tip

# used to initialize heading
anterior_bodyparts:
- snout
- skull
- left_ear
- neck
- right_ear

# used to initialize heading
posterior_bodyparts:
- left_back
- mid_back
- right_back
- tail_base


#==================== FITTING =====================#

# upper bound of uniform noise added to the data during initial AR-HMM fitting; this is used to regularize the model
added_noise_level: 0.1

# number of frames used to fit the PCA model during initialization
PCA_fitting_num_frames: 1000000

# used to define outliers for interpolation when the model is initialized
conf_threshold: 0.5


#================== HYPER PARAMS ==================#

# parameters to convert neural net likelihoods to error size priors
error_estimator:
  intercept: 0.4982047552187215
  slope: -0.5800803861435303

# keypoint observation hyperparameters
obs_hypparams:
  nu_s: 5
  nu_sigma: 100000.0
  sigmasq_0: 0.1
  sigmasq_C: 0.1

# autoregressive hyperparameters
ar_hypparams:
  K_0_scale: 10.0
  S_0_scale: 0.01
  latent_dim: 6
  nlags: 3

# transition hyperparameters
trans_hypparams:
  alpha: 5.7
  gamma: 1000.0
  kappa: 10000.0
  num_states: 100

# centroid movement hyperparameters
cen_hypparams:
  sigmasq_loc: 0.3776449716013334


#===================== OTHER ======================#

# suffix used to match videos to recording names; this can usually be left empty (see `util.find_matching_videos` for details)
recording_name_suffix: ''

# whether to print progress messages during fitting
verbose: false

# pseudocount used regularize neural network confidences
conf_pseudocount: 0.001

# directory with videos from which keypoints were derived (used for crowd movies)
video_dir:
- projects/elm_ms/data/vids/T
- projects/elm_ms/data/vids/S1
- projects/elm_ms/data/vids/S2
# - projects/elm_ms/data/vids/G68_clean
# - projects/elm_ms/data/vids/G39

# colormap used for visualization; see `matplotlib.cm.get_cmap` for options
keypoint_colormap: autumn

# whether to whiten principal components; used to initialize the latent pose trajectory `x`
whiten: true

# whether to keep the heading angle fixed; this should only be True if the pose is constrained to a narrow range of angles, e.g. a headfixed mouse.
fix_heading: false

# frames per second of the video recordings
fps: 30